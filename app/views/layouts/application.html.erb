<!DOCTYPE html>
<html>
<head>
  <title>ROBIN8 | Welcome</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <% if china_request? %>
    <link href="//fonts.useso.com/css?family=Open+Sans:400,300,600,800,700,400italic,600italic,700italic,800italic,300italic" rel="stylesheet" type="text/css">
    <script src="http://maps.google.cn/maps/api/js?libraries=places&sensor=false"></script>
  <% else %>
    <link href="//fonts.googleapis.com/css?family=Open+Sans:400,300,600,800,700,400italic,600italic,700italic,800italic,300italic" rel="stylesheet" type="text/css">
    <script src="//maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
  <% end %>

  <% if Rails.env.development? %>
    <%= stylesheet_link_tag    '/assets/app/dev_base_compact', 'app/dev_reload', media: 'all', 'data-turbolinks-track' => true %>
    <%= javascript_include_tag '/assets/app/dev_base_compact', 'app/dev_reload','app/dev_reload', 'data-turbolinks-track' => true %>
  <% else %>
    <%= stylesheet_link_tag    'app/application', media: 'all', 'data-turbolinks-track' => true %>
    <%= javascript_include_tag 'app/application', 'data-turbolinks-track' => true %>
  <% end %>

  <%= csrf_meta_tags %>
  <%= favicon_link_tag 'favicon.ico' %>
</head>
<body>
  <div id="main">
    <div style="width:100px;height:100px;background-color:red">
      <button class="pickfiles33" id="pickfiles33">upload</button></div>

    <%= yield %>

  </div>

  <div class="modal fade" id="modal" tabindex="-1"
    role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"></div>

<script type="text/javascript">

  $(document).ready(function() {
    Robin.chinaInstance = <%= china_instance?  %>;
    Robin.chinaLocale = <%= china_locale? %>;
    Robin.chinaRequest = <%= china_request? %>;
    Robin.production = <%= production? %>;
    Robin.mobileRequest = <%= mobile_request? %>;
    Robin.start();
    console.log("----fefefef");
    var uploader = Qiniu.uploader({
        runtimes: 'html5,flash,html4',    //上传模式,依次退化
        browse_button: 'pickfiles33',       //上传选择的点选按钮，**必需**
        uptoken_url: '/users/qiniu_uptoken',
            //Ajax请求upToken的Url，**强烈建议设置**（服务端提供）
        // uptoken : '<Your upload token>',
            //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
        // unique_names: true,
            // 默认 false，key为文件名。若开启该选项，SDK会为每个文件自动生成key（文件名）
        // save_key: true,
            // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理
        domain: '7xozqe.com1.z0.glb.clouddn.com',
            //bucket 域名，下载资源时用到，**必需**
        container: 'container',           //上传区域DOM ID，默认是browser_button的父元素，
        max_file_size: '100mb',           //最大文件体积限制
        flash_swf_url: 'js/plupload/Moxie.swf',  //引入flash,相对路径
        max_retries: 3,                   //上传失败最大重试次数
        dragdrop: true,                   //开启可拖曳上传
        drop_element: 'container',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
        chunk_size: '4mb',                //分块上传时，每片的体积
        auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
        init: {
            'FilesAdded': function(up, files) {
                plupload.each(files, function(file) {
                    // 文件添加进队列后,处理相关的事情
                });
            },
            'BeforeUpload': function(up, file) {
                   // 每个文件上传前,处理相关的事情
            },
            'UploadProgress': function(up, file) {
                   // 每个文件上传时,处理相关的事情
            },
            'FileUploaded': function(up, file, info) {
                   // 每个文件上传成功后,处理相关的事情
                   // 其中 info 是文件上传成功后，服务端返回的json，形式如
                   // {
                   //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
                   //    "key": "gogopher.jpg"
                   //  }
                   // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html
                   // var domain = up.getOption('domain');
                   // var res = parseJSON(info);
                   // var sourceLink = domain + res.key; 获取上传成功后的文件的Url
            },
            'Error': function(up, err, errTip) {
                   //上传出错时,处理相关的事情
            },
            'UploadComplete': function() {
                   //队列文件处理完毕后,处理相关的事情
            }
            // 'Key': function(up, file) {
            //     // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
            //     // 该配置必须要在 unique_names: false , save_key: false 时才生效
            //     var key = "";
            //     // do something with key here
            //     return key
            // }
        }
    });
  });
  var flashInfo = '<%= flash.now[:alert] || flash.now[:notice]  %>';
  polyglot = new Polyglot({phrases: <%= raw @phrases.to_json %>});
  en_polyglot = new Polyglot({phrases: <%= raw @en_phrases.to_json %>, locale: "en"});
  <% if flash[:success_confirmation] -%>
    Robin.afterConfirmationMessage = '<%= flash[:success_confirmation] %>'
  <% end -%>
  <% if user_signed_in? -%>
    Robin.currentUser = new Robin.Models.User(<%= current_user.to_json.html_safe %>);
    <% if (request.subdomain != 'staging' && !request.subdomain.blank?) %>
      Robin.publicPages = true
    <% end %>
  <% else -%>
    if (Robin) {
      Robin.currentUser = null;
    }
  <% end -%>

  Robin.us_host = "<%= Rails.application.secrets.instance_host[:us] %>";
  Robin.cn_host = "<%= Rails.application.secrets.instance_host[:cn] %>";

  <% if Rails.env == 'development' -%>
    Robin.showLoading = false;
  <% else -%>
    Robin.showLoading = true;
  <% end -%>

  <% if not Rails.env.production? || Rails.application.config.china_instance %>
    Robin.showLangPanel = true;
  <% else %>
    Robin.showLangPanel = false;
  <% end %>
</script>
<!-- load bitly javascript sdk -->
<% unless request.location && request.location.country.to_s == "China" %>
  <script type="text/javascript" src="//bit.ly/javascript-api.js?version=latest&login=o_1kj2k3og6&apiKey=R_f9edc1bfe86f3ed758207c0a3e948e86">
  </script>
<% end %>
<!-- end load bitly javascript sdk -->
<script src="https://gateway.bluesnap.com/js/cse/v1.0.1/bluesnap.js"></script>
</body>
<%=render :partial => "shared/feedback"%>
</html>
